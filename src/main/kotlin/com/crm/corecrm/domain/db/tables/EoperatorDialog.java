/*
 * This file is generated by jOOQ.
*/
package com.crm.corecrm.domain.db.tables;


import com.crm.corecrm.domain.db.Indexes;
import com.crm.corecrm.domain.db.Keys;
import com.crm.corecrm.domain.db.Public;
import com.crm.corecrm.domain.db.tables.records.EoperatorDialogRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EoperatorDialog extends TableImpl<EoperatorDialogRecord> {

    private static final long serialVersionUID = -305773313;

    /**
     * The reference instance of <code>PUBLIC.EOPERATOR_DIALOG</code>
     */
    public static final EoperatorDialog EOPERATOR_DIALOG = new EoperatorDialog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EoperatorDialogRecord> getRecordType() {
        return EoperatorDialogRecord.class;
    }

    /**
     * The column <code>PUBLIC.EOPERATOR_DIALOG.ID</code>.
     */
    public final TableField<EoperatorDialogRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>PUBLIC.EOPERATOR_DIALOG.SUPPORT_ID</code>.
     */
    public final TableField<EoperatorDialogRecord, Long> SUPPORT_ID = createField("SUPPORT_ID", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>PUBLIC.EOPERATOR_DIALOG.DIALOG_ID</code>.
     */
    public final TableField<EoperatorDialogRecord, Long> DIALOG_ID = createField("DIALOG_ID", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>PUBLIC.EOPERATOR_DIALOG</code> table reference
     */
    public EoperatorDialog() {
        this(DSL.name("EOPERATOR_DIALOG"), null);
    }

    /**
     * Create an aliased <code>PUBLIC.EOPERATOR_DIALOG</code> table reference
     */
    public EoperatorDialog(String alias) {
        this(DSL.name(alias), EOPERATOR_DIALOG);
    }

    /**
     * Create an aliased <code>PUBLIC.EOPERATOR_DIALOG</code> table reference
     */
    public EoperatorDialog(Name alias) {
        this(alias, EOPERATOR_DIALOG);
    }

    private EoperatorDialog(Name alias, Table<EoperatorDialogRecord> aliased) {
        this(alias, aliased, null);
    }

    private EoperatorDialog(Name alias, Table<EoperatorDialogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CONSTRAINT_INDEX_F, Indexes.CONSTRAINT_INDEX_F3, Indexes.PRIMARY_KEY_F);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EoperatorDialogRecord, Integer> getIdentity() {
        return Keys.IDENTITY_EOPERATOR_DIALOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EoperatorDialogRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_F;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EoperatorDialogRecord>> getKeys() {
        return Arrays.<UniqueKey<EoperatorDialogRecord>>asList(Keys.CONSTRAINT_F);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<EoperatorDialogRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<EoperatorDialogRecord, ?>>asList(Keys.CONSTRAINT_F3, Keys.CONSTRAINT_F39);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EoperatorDialog as(String alias) {
        return new EoperatorDialog(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EoperatorDialog as(Name alias) {
        return new EoperatorDialog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EoperatorDialog rename(String name) {
        return new EoperatorDialog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EoperatorDialog rename(Name name) {
        return new EoperatorDialog(name, null);
    }
}
