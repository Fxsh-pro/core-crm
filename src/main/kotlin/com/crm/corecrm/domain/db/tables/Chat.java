/*
 * This file is generated by jOOQ.
*/
package com.crm.corecrm.domain.db.tables;


import com.crm.corecrm.domain.db.Indexes;
import com.crm.corecrm.domain.db.Keys;
import com.crm.corecrm.domain.db.Public;
import com.crm.corecrm.domain.db.tables.records.ChatRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Chat extends TableImpl<ChatRecord> {

    private static final long serialVersionUID = 383746691;

    /**
     * The reference instance of <code>PUBLIC.CHAT</code>
     */
    public static final Chat CHAT = new Chat();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ChatRecord> getRecordType() {
        return ChatRecord.class;
    }

    /**
     * The column <code>PUBLIC.CHAT.ID</code>.
     */
    public final TableField<ChatRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>PUBLIC.CHAT.TG_CHAT_ID</code>.
     */
    public final TableField<ChatRecord, Integer> TG_CHAT_ID = createField("TG_CHAT_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.CHAT.CREATOR_BY</code>.
     */
    public final TableField<ChatRecord, Integer> CREATOR_BY = createField("CREATOR_BY", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.CHAT.CREATED_AT</code>.
     */
    public final TableField<ChatRecord, Integer> CREATED_AT = createField("CREATED_AT", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.CHAT.STATUS</code>.
     */
    public final TableField<ChatRecord, String> STATUS = createField("STATUS", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * Create a <code>PUBLIC.CHAT</code> table reference
     */
    public Chat() {
        this(DSL.name("CHAT"), null);
    }

    /**
     * Create an aliased <code>PUBLIC.CHAT</code> table reference
     */
    public Chat(String alias) {
        this(DSL.name(alias), CHAT);
    }

    /**
     * Create an aliased <code>PUBLIC.CHAT</code> table reference
     */
    public Chat(Name alias) {
        this(alias, CHAT);
    }

    private Chat(Name alias, Table<ChatRecord> aliased) {
        this(alias, aliased, null);
    }

    private Chat(Name alias, Table<ChatRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CONSTRAINT_INDEX_1F, Indexes.PRIMARY_KEY_1F);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ChatRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CHAT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ChatRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_1F;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ChatRecord>> getKeys() {
        return Arrays.<UniqueKey<ChatRecord>>asList(Keys.CONSTRAINT_1F, Keys.CONSTRAINT_1F8);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Chat as(String alias) {
        return new Chat(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Chat as(Name alias) {
        return new Chat(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Chat rename(String name) {
        return new Chat(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Chat rename(Name name) {
        return new Chat(name, null);
    }
}
