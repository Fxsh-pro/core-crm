/*
 * This file is generated by jOOQ.
*/
package com.crm.corecrm.domain.db.tables;


import com.crm.corecrm.domain.db.Indexes;
import com.crm.corecrm.domain.db.Keys;
import com.crm.corecrm.domain.db.Public;
import com.crm.corecrm.domain.db.tables.records.DialogRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Dialog extends TableImpl<DialogRecord> {

    private static final long serialVersionUID = -361626380;

    /**
     * The reference instance of <code>PUBLIC.DIALOG</code>
     */
    public static final Dialog DIALOG = new Dialog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DialogRecord> getRecordType() {
        return DialogRecord.class;
    }

    /**
     * The column <code>PUBLIC.DIALOG.ID</code>.
     */
    public final TableField<DialogRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>PUBLIC.DIALOG.CREATOR_BY</code>.
     */
    public final TableField<DialogRecord, Long> CREATOR_BY = createField("CREATOR_BY", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.DIALOG.CREATED_AT</code>.
     */
    public final TableField<DialogRecord, Long> CREATED_AT = createField("CREATED_AT", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.DIALOG.STATUS</code>.
     */
    public final TableField<DialogRecord, String> STATUS = createField("STATUS", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * Create a <code>PUBLIC.DIALOG</code> table reference
     */
    public Dialog() {
        this(DSL.name("DIALOG"), null);
    }

    /**
     * Create an aliased <code>PUBLIC.DIALOG</code> table reference
     */
    public Dialog(String alias) {
        this(DSL.name(alias), DIALOG);
    }

    /**
     * Create an aliased <code>PUBLIC.DIALOG</code> table reference
     */
    public Dialog(Name alias) {
        this(alias, DIALOG);
    }

    private Dialog(Name alias, Table<DialogRecord> aliased) {
        this(alias, aliased, null);
    }

    private Dialog(Name alias, Table<DialogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PRIMARY_KEY_7);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DialogRecord, Integer> getIdentity() {
        return Keys.IDENTITY_DIALOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DialogRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_7;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DialogRecord>> getKeys() {
        return Arrays.<UniqueKey<DialogRecord>>asList(Keys.CONSTRAINT_7);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Dialog as(String alias) {
        return new Dialog(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Dialog as(Name alias) {
        return new Dialog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Dialog rename(String name) {
        return new Dialog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Dialog rename(Name name) {
        return new Dialog(name, null);
    }
}
