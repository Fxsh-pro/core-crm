package com.crm.corecrm.domain.repository

import com.crm.corecrm.domain.db.tables.Message.MESSAGE
import com.crm.corecrm.domain.db.tables.records.MessageRecord
import com.crm.corecrm.domain.model.Message
import com.crm.corecrm.domain.model.MessageType
import org.jooq.DSLContext
import org.springframework.stereotype.Repository

@Repository
class MessageRepository(dsl: DSLContext) : AbstractRepository(dsl) {

    fun save(message: Message): Message {
        val record = db.newRecord(MESSAGE).apply {
            chatId = message.chatId
            createdAt = message.createdAt
            createdBy = message.createdBy
            text = message.text
            type = message.type.toString()
        }
        record.store()
        return record.toMessage()
    }

    fun saveWithAutoResponse(message: Message): Message? {
        val record = db.newRecord(MESSAGE).apply {
            chatId = message.chatId
            createdAt = message.createdAt
            createdBy = message.createdBy
            text = message.text
            type = message.type.toString()
        }
        record.store()

        val answer = autoAnswers[message.text.trim()]
        var autoResponse: Message? = null
        if (answer != null) {
            val autoResponseRecord = db.newRecord(MESSAGE).apply {
                chatId = message.chatId
                createdAt = message.createdAt + 1 // Slight delay to keep ordering
                createdBy = -1
                text = answer
                type = MessageType.OUT.toString()
            }
            autoResponseRecord.store()
            autoResponse = autoResponseRecord.toMessage()
        }

        return autoResponse
    }

    fun getMessagesByChatIds(chatIds: List<Int>): Map<Int, List<Message>> {
        val records = db
            .selectFrom(MESSAGE)
            .where(MESSAGE.CHAT_ID.`in`(chatIds))
            .fetch()
            .asSequence()
            .map { it.toMessage() }
            .toList()

        return records.groupBy { it.chatId }
    }


    fun MessageRecord.toMessage(): Message {
        return Message(
            id = this.id,
            chatId = this.chatId,
            createdAt = this.createdAt,
            createdBy = this.createdBy,
            text = this.text,
            type = MessageType.valueOf(this.type)
        )
    }

    companion object {
        val autoAnswers = mapOf(
            "Как найти клинику на портале ПроКлинику?" to "Вы можете найти клинику, введя название клиники, вид лечения или диагностики в поисковом поле. Также можно воспользоваться каталогами видов лечения и диагностики или просмотреть все лечебные учреждения на главной странице.",
            "Как связаться с техподдержкой?" to "Вы можете обратиться в техподдержку по электронной почте support@procliniku.ru. Мы ответим на ваши вопросы в кратчайшие сроки.",
            "Как сравнить цены на услуги в разных клиниках?" to "На странице каждой клиники вы можете увидеть цены на предлагаемые услуги. Сравните их с ценами в других клиниках, используя фильтры и сортировку по цене.",
            "Как записаться на прием к врачу?" to "Для записи на прием выберите нужную клинику, перейдите на ее страницу и воспользуйтесь функцией онлайн-записи. Вы также получите смс-напоминание о визите.",
            "Как узнать рейтинг клиники?" to "Рейтинг клиники отображается на ее странице. Вы можете сравнить рейтинги разных клиник, используя фильтры поиска.",
            "Как получить информацию о медицинских учреждениях в других городах?" to "На портале ПроКлинику доступна информация о клиниках более чем в 1600 населенных пунктах России. Просто выберите нужный город в поиске.",
            "Как зарегистрировать свою клинику на портале?" to "Основной способ регистрации — через Электронную Цифровую Подпись (ЭЦП). Если ЭЦП нет, можно зарегистрироваться по письму с подписью руководителя и печатью. Письмо отправьте на support@procliniku.ru.",
            "Как получить доступ к личному кабинету?" to "Для доступа к личному кабинету вам необходимо зарегистрироваться на портале. После регистрации вы сможете войти, используя свои учетные данные.",
            "Как узнать, какие клиники предлагают услуги по ОМС?" to "На странице каждой клиники указано, принимает ли она пациентов по полису обязательного медицинского страхования (ОМС).",
            "Как узнать, какие процедуры доступны в клинике?" to "На странице каждой клиники вы можете найти разделы, посвященные диагностике и лечению, где указаны все доступные процедуры и их стоимость.",
            "Как найти клинику по специальности врача?" to "Введите в поисковом поле имя специалиста или его специальность, и система покажет вам клиники, где работают такие врачи.",
            "Как оставить отзыв о клинике?" to "Вы можете оставить отзыв о клинике на ее странице, выбрав соответствующий раздел. Ваше мнение поможет другим пользователям сделать выбор.",
            "Как узнать, есть ли у клиники лицензия?" to "Все клиники на портале ПроКлинику проходят регистрацию с использованием лицензии. Информация о лицензии доступна на странице каждой клиники.",
            "Как найти клиники, предлагающие скидки или акции?" to "На главной странице и в разделе акций вы можете найти клиники с Премиум статусом, которые часто предлагают специальные предложения и скидки.",
            "Как получить консультацию по медицинским вопросам?" to "Вы можете обратиться в техподдержку или напрямую в клинику, где вас интересует консультация. Многие клиники также предлагают онлайн-консультации.",
            "Как работает система смс-напоминаний?" to "После записи на прием вы получите смс-напоминание о визите на указанный вами номер телефона. Убедитесь, что ваш номер телефона указан правильно.",
            "Как найти клиники, работающие в выходные дни?" to "В фильтрах поиска вы можете выбрать дни работы клиник, чтобы найти те, которые открыты в выходные.",
            "Как узнать, какие медицинские анализы можно сдать в клинике?" to "На странице клиники в разделе диагностики указаны все доступные медицинские анализы и их стоимость.",
            "Как получить информацию о врачах клиники?" to "На странице каждой клиники вы можете найти информацию о врачах, их квалификации и специализации.",
            "Как узнать, какие клиники находятся рядом с моим местоположением?" to "Воспользуйтесь функцией геолокации на карте, чтобы найти клиники, расположенные рядом с вашим текущим местоположением.",
            "Как узнать, есть ли у клиники возможность платного лечения?" to "Информация о платных услугах доступна на странице клиники в разделе диагностики и лечения."
        )

    }
}

